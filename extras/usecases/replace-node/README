This is an effort to automate the entire process, the script replace_node.sh is
a wrapper script around gdeploy configuration file. It takes three parameters:
`Existing node name', `new node name', and `volume name'. The script generates
a configuration file, and calls gdeploy with the configuration file as an
argument. This handles clusters with multiple hosts and just two hosts.

USAGE:

$ gluster-replace-node NODE-1 NODE-2 VOLUMENAME

*******************************************************************************
Node NODE-2 will be replaced with configuration from NODE-1
It is very important to give the node names right. Review before continuing.

ENSURE TO EDIT THE FILE:
/usr/share/ansible/gdeploy/usecases/replace-node/replace_node.conf.template
And change the devices variable to point the right device.
*******************************************************************************

Continue(y/N):


-------------------------

When continued NODE-2 will be added into the cluster and self-heal is triggered.

Prerequisites:
===========
1. Password less ssh from node-1 to node-2
2. Passwordless ssh from the laptop to node-1, node-2
3. Edit the file:
   /usr/share/ansible/gdeploy/usecases/replace-node/replace_node.conf.template
   And replace the devices varible with the device on the node.

Configuration generation and additional script generation and invocation is
managed by gdeploy.

Report bugs in bugzilla.redhat.com or mail me at surs@redhat.com
